name: Build
on:
  push:
    branches:
    - 'master'
    paths-ignore:
    - '**.md'
    - '**.gitignore'
    - '**.opam'
    - 'LICENSE'
  pull_request:
    paths-ignore:
    - '**.md'
    - '**.gitignore'
    - '**.opam'
    - 'LICENSE'
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: aucobra/concert:deps-8.16.1
      options: --user root
    steps:
    - name: Checkout branch ${{ github.ref_name }}
      uses: actions/checkout@v3
    - name: Setup environment
      run: |
        echo "::group::Setting up switch"
        echo "HOME=/home/coq" >> $GITHUB_ENV
        export HOME=/home/coq
        echo "/home/coq/.cargo/bin" >> $GITHUB_PATH
        PATH=/home/coq/.cargo/bin:$PATH
        eval $(opam env --switch=${COMPILER} --set-switch)
        env
        opam switch
        echo "::endgroup::"

        echo "::group::Setting up problem matcher"
        echo "::add-matcher::./.github/coq-errors.json"
        echo "::endgroup::"
    - name: Build dependencies
      run: |
        echo "::group::Setting up switch"
        eval $(opam env --switch=${COMPILER} --set-switch)
        echo "::endgroup::"

        echo "::group::Build MetaCoq"
        opam remove -y coq-metacoq-erasure coq-metacoq-pcuic coq-metacoq-safechecker coq-metacoq-template
        opam install -y --deps-only .
        echo "::endgroup::"
    - name: Build core
      run: |
        echo "::group::Setting up switch"
        eval $(opam env --switch=${COMPILER} --set-switch)
        echo "::endgroup::"

        echo "::group::Build Core"
        make -j2 theory
        echo "::endgroup::"

        echo "::group::Build Plugin"
        make -j2 plugin
        echo "::endgroup::"
    - name: Build tests
      run: |
        echo "::group::Setting up switch"
        eval $(opam env --switch=${COMPILER} --set-switch)
        echo "::endgroup::"

        echo "::group::Build tests"
        make -j2 tests
        echo "::endgroup::"
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Test extraction
      run: |
        echo "::group::Running tests"
        make -j2 -C tests test-extraction
        echo "::endgroup::"

        echo "::group::Cleaning up"
        make -j2 -C tests clean-extraction-out-files
        make -j2 -C tests clean-compiled-extraction
        echo "::endgroup::"
